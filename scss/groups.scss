@import 'compass/css3';
@import 'variables';



.button-photo{
    background: rgba(0,0,0,.4);
}


.chapter-menu{
	margin-bottom: 0;
	li{
		line-height: 42px;
		vertical-align: middle;
		margin-right: 12px;
		a{
			color: $C_textSecondary;
		}
	}
}


#header{
	background: $C_backgroundNav;
	.doc-bounds{
		padding: 12px 30px;
	}
	#logo{
		width: 68px;
		height: 45px;
	}
}


@include respond-to(handheld){
	// fixed header
	#header{
		position: fixed;
		top: 0;
		left: 0;
		z-index: 2;
		height: 47px;
		border-bottom: 1px solid $C_lineGray;
		#logo{
			width: 46px;
			height: 30px;
			vertical-align: middle;
			display: inline-block;
			margin-top: 8px;
		}
		.doc-bounds{
			padding: 0 12px;
			line-height: 47px;
			vertical-align: middle;
		}
	}
	body{
		padding-top: 47px;
	}
}


// speeds up event bubbling & transitions somehow 
// it is a mystery
#groupList{
    @include backface-visibility(hidden);
}



// generic fillable icon
.fillable{
    height: 38px;
    width: 34px;
    margin: 0 auto;
    background-position: center center;
	display: inline-block;
}
.filled{
    @extend .fillable;
    @include transform(scale(0) rotate(120deg));
    @include transition(all .3s cubic-bezier(0.68, -0.55, 0.265, 1.55) ); 
    &.on{
         @include transform(scale(1) rotate(0deg));
    } 
}

// specific fillable for follow
.followable{
    background-image: url(../css/follow_divided.svg); 
    .filled{
        background-image: url(../css/following_divided.svg);       
    }
    
    .primary &{
        background-image: url(../css/follow_divided_white.svg); 
    }
}


.red{
    color: $C_red;
}

.followlabel{
    text-transform: uppercase;
    font-size: 8px;
    color: #aaa;
    text-align: center;
    //display: inline-block;
}
.group{
    .fix{
        text-align: center;
        //border-left: 1px solid #eee;
        padding: 12px 8px;
        min-width: 48px;
    }
}


//hideable 
.hideable{
  @include box-sizing(border-box);
  @include transition(all .4s ease-in-out);
  display: inline-block;
  white-space: nowrap;
  overflow: hidden;
  max-width: 20em;
  vertical-align: top;  
  &.hid{
    max-width: 0;
  }
}

.button.ghost{
    &, &:hover{
        @include transition(all .15s ease-in-out);
        background: transparent;
        color: transparent ;
        @include box-shadow(none);
    }
}


// diffword label animation
.diffword{
    .diff1, .diff2, del, ins{
        display: inline-block;
        overflow: hidden;
        max-width: 0;
        @include transition(all .4s);
    }
    &.show_diff1{
        .diff1{
            max-width: 1em;               
        }

    }
    &.show_diff2{
        .diff2{
            max-width: 1em;                              
        }
       
    }
}


// --------------------------------


.join-button-wrap{
    overflow: hidden;
    height: 40px;
    position: relative;
    @include transition(all .2s );
    .button, .joinword{
        position: absolute;
        left: 0;
        top: 0;
    }
    .button{
        @include transition(all .2s);        
        opacity: 0;
        margin-bottom: 4px;
        &.on{
            opacity: 1;
        }
    }
    .joinword{
        @include transition(all .2s);    
        display: inline-block;            
        opacity: 0;        
        font-weight: bold;
        &.on{
            opacity: 1;
        }
    }
}

/*
#catList{
	li{
		$r: 3px;
        
		.photo-button{
			width: 100%; 
			height: 120px;
			position: relative;
            @include border-radius($r);
            background: #fff;
		}
		.photo-button-check{
			@include border-radius($r);
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			//background-image: url(../css/check.png); 
			background-size: 100%; 
			@include box-sizing(border-box); 
			
	   		 $grad_lead_in: 30%;
	   		 $grad_0: rgba(22, 24, 27, 0);
	   		 $grad_2: rgba(22, 24, 27, .9);
	   		 background: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop( $grad_lead_in, $grad_0), color-stop(100%, $grad_2));
	   		 background: -webkit-linear-gradient(top, $grad_0  $grad_lead_in, $grad_2);
	   		 background: -moz-linear-gradient(top, $grad_0  $grad_lead_in, $grad_2);
	   		 background: -o-linear-gradient(top, $grad_0 $grad_lead_in, $grad_2);
	   		 background: -ms-linear-gradient(top, $grad_0 $grad_lead_in, $grad_2);
	   		 background: linear-gradient(top, $grad_0 $grad_lead_in, $grad_2);
             //opacity: .3;
             
		}
		.photo-button-photo{
			@include border-radius($r);
			//@include filter( grayscale(50%) );	
			height: 100%;
			width: 100%;	
			position: absolute;
			top: 0;
			left: 0;
			@include background-size(cover);
            //opacity: .5;
            	
		}
		.photo-button-label{
			position: absolute;
			bottom: 0;
			left: 0;
			width: 100%;
			color: #fff;
			font-weight: bold;
			//text-align: center;
			@include box-sizing(border-box); 
		}
		
		&.on{
			.photo-button-photo{
                //opacity: 1;
				//@include filter( grayscale(0%) );
				
			}
			.photo-button-check{
                //opacity: 1;
				border: 8px solid $C_blue;
				//background-color: $C_overlayPressed;
				&:after{
					background-image: url(../css/check_on.png);   
					background-size: 100%;
					background-repeat: no-repeat;
					content: "";
					display: block;
					position: absolute;
					right: -1px;
					top: -1px;
					height: 32px;
					width: 33px;
				}
			}
		}
	}
}
*/

// $max-count is the maximum amount of colors you'll want
// $color-frequency is how intense you want the color change to be. Lower # = more intense changes
@mixin colors($max-count, $color-frequency){
  $color: 70/$max-count;

  @for $i from 1 through $max-count {
    &:nth-child(#{$max-count}n + #{$i}) {
      background: hsl((($i - 1)*($color / $color-frequency)+180), 90%, 50%);
    }
  }
  
}

$c: 150px;
$bc: $c * 5;

.cats{
    text-align: center;
    text-justify: inter-word;
	position: relative;
    .cat{
		//background: cornflowerblue;
        @include box-sizing(border-box);
        vertical-align: top;
        line-height: $c*.75;
        height: $c*.75;
        //width: $c;
		text-align: center;
		backface-visibility: hidden;
       	background: blue;
        @include transition(background 0s linear, transform .2s  );
		&.on{
			background: white;
		}
        .count{
            $c: 32px;
            position: absolute;
            top: -($c/2);
            left: 50%;
            margin-left: -($c/2);
            background: red;
            color: #fff;
            @include border-radius(100%);   
            line-height: $c;
            width: $c;
            height: $c;         
        }
    }
}

@include respond-to(handheld){
	.cats{
		.cat{
			width: 100%;
			height: auto;
			line-height: 3em;
		}
		.topics{
			.topic{
				font-size: 12px;
				max-width: 10em;
			}
		}
	}
}

$t: 30px;
.cats .topics{
	line-height: 1em;
	position: absolute;
	top: 0;
	left: 0;
	list-style: none;
	padding: 0;
	margin: 0;
	.topic{
		color: cornflowerblue;
		border: 1px solid cornflowerblue;
		padding: 0 1em;
		line-height: $t;
		@include border-radius($t);
		display: block;
		position: absolute;
		top: 0;
		left: 0;
		white-space: nowrap;
        background: white;
		text-overflow: ellipsis;
		overflow: hidden;
        @include transition(all .2s, opacity 0s, background 0s, color 0s);    
		&.on{
			background: cornflowerblue;
			color: white;
		}
	}
}


